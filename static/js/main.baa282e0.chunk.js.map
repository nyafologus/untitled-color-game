{"version":3,"sources":["ColorBox.js","NavBar.js","Palette.js","seedColors.js","colorHelpers.js","App.js","serviceWorker.js","index.js"],"names":["ColorBox","props","state","copied","changeCopyState","bind","this","setState","setTimeout","name","background","text","onCopy","className","style","Component","NavBar","handleChange","e","handleColorFormatChange","target","value","handleClick","open","handleClose","event","reason","level","onSliderChange","format","href","width","margin","defaultValue","min","max","step","onChange","trackStyle","height","handleStyle","borderColor","marginLeft","marginTop","backgroundColor","borderStyle","borderWidth","boxShadow","railStyle","Select","MenuItem","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","message","id","toUpperCase","ContentProps","action","IconButton","onClick","key","aria-label","Palette","console","log","newFormat","colorFormat","palette","colors","paletteName","emoji","colorBoxes","map","color","levels","generatePalette","starterPalette","newPalette","hexColor","numberOfColors","scale","chroma","darken","hex","getRange","mode","reverse","i","push","toLowerCase","replace","rgb","css","rgba","App","seedColors","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"2YAIqBA,G,mBACnB,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAQ,CAAEC,QAAQ,GAEvB,EAAKC,gBAAkB,EAAKA,gBAAgBC,KAArB,gBAJN,E,+EAOA,IAAD,OAGhBC,KAAKC,SAAS,CAAEJ,QAAQ,IAAQ,WAC9BK,YAAW,kBAAM,EAAKD,SAAS,CAAEJ,QAAQ,MAAU,W,+BAI9C,MAEsBG,KAAKL,MAA1BQ,EAFD,EAECA,KAAMC,EAFP,EAEOA,WACNP,EAAWG,KAAKJ,MAAhBC,OACR,OACE,kBAAC,kBAAD,CAAiBQ,KAAMD,EAAYE,OAAQN,KAAKF,iBAE9C,yBAAKS,UAAU,WAAWC,MAAO,CAAEJ,eAOjC,yBAAKG,UAAS,uBAAkBV,GAAU,QAAUW,MAAO,CAAEJ,gBAC7D,yBAAKG,UAAS,mBAAcV,GAAU,SACpC,uCACA,2BAAIO,IAEN,yBAAKG,UAAU,kBACb,yBAAKA,UAAU,eACb,8BAAOJ,IAET,4BAAQI,UAAU,eAAlB,SAGF,0BAAMA,UAAU,YAAhB,c,GA1C4BE,c,+ECMjBC,E,YACnB,WAAYf,GAAQ,IAAD,8BACjB,4CAAMA,KAMRgB,aAAe,SAACC,GACd,EAAKjB,MAAMkB,wBAAwBD,EAAEE,OAAOC,OAC5C,EAAKC,eATY,EAYnBA,YAAc,WACZ,EAAKf,SAAS,CAAEgB,MAAM,KAbL,EAgBnBC,YAAc,SAACC,EAAOC,GACpB,EAAKnB,SAAS,CAAEgB,MAAM,KAftB,EAAKrB,MAAQ,CACXqB,MAAM,GAHS,E,sEAuBT,IAAD,EACmCjB,KAAKL,MAAvC0B,EADD,EACCA,MAAOC,EADR,EACQA,eAAgBC,EADxB,EACwBA,OAG/B,OACE,4BAAQhB,UAAU,UAChB,yBAAKA,UAAU,QACb,uBAAGiB,KAAK,KAAR,wBAGF,yBAAKjB,UAAU,oBACb,0BAAMA,UAAU,gBAAhB,UAAuCc,GACvC,yBAAKb,MATG,CAAEiB,MAAO,IAAKC,OAAQ,KAU5B,kBAAC,IAAD,CACEC,aAAcN,EACdO,IAAK,IACLC,IAAK,IACLC,KAAM,IACNC,SAAUT,EACVU,WAAY,CAAEC,OAAQ,GACtBC,YAAa,CACXC,YAAa,UACbF,OAAQ,GACRR,MAAO,GACPW,WAAY,EACZC,WAAY,IACZC,gBAAiB,UACjBC,YAAa,QACbC,YAAa,EACbC,UAAW,QAEbC,UAAW,CAAET,OAAQ,OAK3B,yBAAK1B,UAAU,oBACb,kBAACoC,EAAA,EAAD,CAAQ5B,MAAOQ,EAAQQ,SAAU/B,KAAKW,cACpC,kBAACiC,EAAA,EAAD,CAAU7B,MAAM,OAAhB,iBACA,kBAAC6B,EAAA,EAAD,CAAU7B,MAAM,OAAhB,yBACA,kBAAC6B,EAAA,EAAD,CAAU7B,MAAM,QAAhB,iCAIJ,yBAAKR,UAAU,sBACb,kBAACsC,EAAA,EAAD,CACEC,aAAc,CACZC,SAAU,SACVC,WAAY,QAEd/B,KAAMjB,KAAKJ,MAAMqB,KACjBgC,iBAAkB,IAClBC,QAASlD,KAAKkB,YACdiC,QAAS,0BAAMC,GAAG,cAAT,qBAAyC7B,EAAO8B,eAEzDC,aAAc,CAAE,mBAAoB,cACpCC,OAAQ,CAEN,kBAACC,EAAA,EAAD,CAAYC,QAASzD,KAAKkB,YAAawC,IAAI,QAAQC,aAAW,SAC5D,kBAAC,IAAD,gB,GAnFoBlD,aCLfmD,G,mBACnB,WAAYjE,GAAQ,IAAD,8BACjB,4CAAMA,KAOR2B,eAAiB,SAACD,GAChBwC,QAAQC,IAAIzC,GACZ,EAAKpB,SAAS,CAAEoB,WAVC,EAanBR,wBAA0B,SAACkD,GACzB,EAAK9D,SAAS,CAAE+D,YAAaD,KAZ7B,EAAKnE,MAAQ,CACXyB,MAAO,IACP2C,YAAa,OAJE,E,sEAiBT,IAAD,EACgChE,KAAKL,MAAMsE,QAA1CC,EADD,EACCA,OAAQC,EADT,EACSA,YAAaC,EADtB,EACsBA,MADtB,EAEwBpE,KAAKJ,MAA5ByB,EAFD,EAECA,MAAO2C,EAFR,EAEQA,YAETK,EAAaH,EAAO7C,GAAOiD,KAAI,SAACC,GAAD,OAAW,kBAAC,EAAD,CAAUnE,WAAYmE,EAAMP,GAAc7D,KAAMoE,EAAMpE,UACtG,OACE,yBAAKI,UAAU,WACb,kBAAC,EAAD,CACEc,MAAOA,EACPC,eAAgBtB,KAAKsB,eACrBC,OAAQyC,EACRnD,wBAAyBb,KAAKa,0BAEhC,yBAAKN,UAAU,kBAAkB8D,GACjC,4BAAQ9D,UAAU,kBACf4D,EACD,0BAAM5D,UAAU,SAAS6D,S,GAlCE3D,cCLtB,GACb,CACE0D,YAAa,qBACbf,GAAI,qBACJgB,MAAO,eACPF,OAAQ,CACN,CAAE/D,KAAM,MAAOoE,MAAO,WACtB,CAAEpE,KAAM,OAAQoE,MAAO,WACvB,CAAEpE,KAAM,SAAUoE,MAAO,WACzB,CAAEpE,KAAM,aAAcoE,MAAO,WAC7B,CAAEpE,KAAM,SAAUoE,MAAO,WACzB,CAAEpE,KAAM,OAAQoE,MAAO,WACvB,CAAEpE,KAAM,YAAaoE,MAAO,WAC5B,CAAEpE,KAAM,OAAQoE,MAAO,WACvB,CAAEpE,KAAM,OAAQoE,MAAO,WACvB,CAAEpE,KAAM,QAASoE,MAAO,WACxB,CAAEpE,KAAM,aAAcoE,MAAO,WAC7B,CAAEpE,KAAM,OAAQoE,MAAO,WACvB,CAAEpE,KAAM,SAAUoE,MAAO,WACzB,CAAEpE,KAAM,QAASoE,MAAO,WACxB,CAAEpE,KAAM,SAAUoE,MAAO,WACzB,CAAEpE,KAAM,aAAcoE,MAAO,WAC7B,CAAEpE,KAAM,QAASoE,MAAO,WACxB,CAAEpE,KAAM,OAAQoE,MAAO,WACvB,CAAEpE,KAAM,WAAYoE,MAAO,aAG/B,CACEJ,YAAa,oBACbf,GAAI,oBACJgB,MAAO,eACPF,OAAQ,CACN,CAAE/D,KAAM,YAAaoE,MAAO,WAC5B,CAAEpE,KAAM,UAAWoE,MAAO,WAC1B,CAAEpE,KAAM,aAAcoE,MAAO,WAC7B,CAAEpE,KAAM,WAAYoE,MAAO,WAC3B,CAAEpE,KAAM,aAAcoE,MAAO,WAC7B,CAAEpE,KAAM,WAAYoE,MAAO,WAC3B,CAAEpE,KAAM,YAAaoE,MAAO,WAC5B,CAAEpE,KAAM,aAAcoE,MAAO,WAC7B,CAAEpE,KAAM,WAAYoE,MAAO,WAC3B,CAAEpE,KAAM,eAAgBoE,MAAO,WAC/B,CAAEpE,KAAM,YAAaoE,MAAO,WAC5B,CAAEpE,KAAM,SAAUoE,MAAO,WACzB,CAAEpE,KAAM,WAAYoE,MAAO,WAC3B,CAAEpE,KAAM,SAAUoE,MAAO,WACzB,CAAEpE,KAAM,WAAYoE,MAAO,WAC3B,CAAEpE,KAAM,SAAUoE,MAAO,WACzB,CAAEpE,KAAM,UAAWoE,MAAO,WAC1B,CAAEpE,KAAM,cAAeoE,MAAO,WAC9B,CAAEpE,KAAM,SAAUoE,MAAO,WACzB,CAAEpE,KAAM,WAAYoE,MAAO,aAG/B,CACEJ,YAAa,uBACbf,GAAI,uBACJgB,MAAO,2BACPF,OAAQ,CACN,CAAE/D,KAAM,YAAaoE,MAAO,WAC5B,CAAEpE,KAAM,UAAWoE,MAAO,WAC1B,CAAEpE,KAAM,cAAeoE,MAAO,WAC9B,CAAEpE,KAAM,eAAgBoE,MAAO,WAC/B,CAAEpE,KAAM,WAAYoE,MAAO,WAC3B,CAAEpE,KAAM,gBAAiBoE,MAAO,WAChC,CAAEpE,KAAM,eAAgBoE,MAAO,WAC/B,CAAEpE,KAAM,mBAAoBoE,MAAO,WACnC,CAAEpE,KAAM,cAAeoE,MAAO,WAC9B,CAAEpE,KAAM,aAAcoE,MAAO,WAC7B,CAAEpE,KAAM,cAAeoE,MAAO,WAC9B,CAAEpE,KAAM,iBAAkBoE,MAAO,WACjC,CAAEpE,KAAM,qBAAsBoE,MAAO,WACrC,CAAEpE,KAAM,kBAAmBoE,MAAO,WAClC,CAAEpE,KAAM,YAAaoE,MAAO,WAC5B,CAAEpE,KAAM,aAAcoE,MAAO,WAC7B,CAAEpE,KAAM,cAAeoE,MAAO,WAC9B,CAAEpE,KAAM,0BAA2BoE,MAAO,WAC1C,CAAEpE,KAAM,oBAAqBoE,MAAO,WACpC,CAAEpE,KAAM,gBAAiBoE,MAAO,aAGpC,CACEJ,YAAa,0BACbf,GAAI,0BACJgB,MAAO,2BACPF,OAAQ,CACN,CAAE/D,KAAM,oBAAqBoE,MAAO,WACpC,CAAEpE,KAAM,cAAeoE,MAAO,WAC9B,CAAEpE,KAAM,kBAAmBoE,MAAO,WAClC,CAAEpE,KAAM,YAAaoE,MAAO,WAC5B,CAAEpE,KAAM,aAAcoE,MAAO,WAC7B,CAAEpE,KAAM,WAAYoE,MAAO,WAC3B,CAAEpE,KAAM,gBAAiBoE,MAAO,WAChC,CAAEpE,KAAM,eAAgBoE,MAAO,WAC/B,CAAEpE,KAAM,cAAeoE,MAAO,WAC9B,CAAEpE,KAAM,iBAAkBoE,MAAO,WACjC,CAAEpE,KAAM,YAAaoE,MAAO,WAC5B,CAAEpE,KAAM,YAAaoE,MAAO,WAC5B,CAAEpE,KAAM,cAAeoE,MAAO,WAC9B,CAAEpE,KAAM,YAAaoE,MAAO,WAC5B,CAAEpE,KAAM,gBAAiBoE,MAAO,WAChC,CAAEpE,KAAM,eAAgBoE,MAAO,WAC/B,CAAEpE,KAAM,cAAeoE,MAAO,WAC9B,CAAEpE,KAAM,WAAYoE,MAAO,WAC3B,CAAEpE,KAAM,cAAeoE,MAAO,WAC9B,CAAEpE,KAAM,gBAAiBoE,MAAO,aAGpC,CACEJ,YAAa,wBACbf,GAAI,wBACJgB,MAAO,2BACPF,OAAQ,CACN,CAAE/D,KAAM,YAAaoE,MAAO,WAC5B,CAAEpE,KAAM,kBAAmBoE,MAAO,WAClC,CAAEpE,KAAM,cAAeoE,MAAO,WAC9B,CAAEpE,KAAM,UAAWoE,MAAO,WAC1B,CAAEpE,KAAM,gBAAiBoE,MAAO,WAChC,CAAEpE,KAAM,QAASoE,MAAO,WACxB,CAAEpE,KAAM,cAAeoE,MAAO,WAC9B,CAAEpE,KAAM,cAAeoE,MAAO,WAC9B,CAAEpE,KAAM,YAAaoE,MAAO,WAC5B,CAAEpE,KAAM,gBAAiBoE,MAAO,WAChC,CAAEpE,KAAM,aAAcoE,MAAO,WAC7B,CAAEpE,KAAM,aAAcoE,MAAO,WAC7B,CAAEpE,KAAM,cAAeoE,MAAO,WAC9B,CAAEpE,KAAM,cAAeoE,MAAO,WAC9B,CAAEpE,KAAM,eAAgBoE,MAAO,WAC/B,CAAEpE,KAAM,iBAAkBoE,MAAO,WACjC,CAAEpE,KAAM,YAAaoE,MAAO,WAC5B,CAAEpE,KAAM,UAAWoE,MAAO,WAC1B,CAAEpE,KAAM,WAAYoE,MAAO,WAC3B,CAAEpE,KAAM,aAAcoE,MAAO,aAGjC,CACEJ,YAAa,yBACbf,GAAI,yBACJgB,MAAO,2BACPF,OAAQ,CACN,CAAE/D,KAAM,eAAgBoE,MAAO,WAC/B,CAAEpE,KAAM,aAAcoE,MAAO,WAC7B,CAAEpE,KAAM,eAAgBoE,MAAO,WAC/B,CAAEpE,KAAM,mBAAoBoE,MAAO,WACnC,CAAEpE,KAAM,WAAYoE,MAAO,WAC3B,CAAEpE,KAAM,cAAeoE,MAAO,WAC9B,CAAEpE,KAAM,aAAcoE,MAAO,WAC7B,CAAEpE,KAAM,kBAAmBoE,MAAO,WAClC,CAAEpE,KAAM,eAAgBoE,MAAO,WAC/B,CAAEpE,KAAM,QAASoE,MAAO,WACxB,CAAEpE,KAAM,mBAAoBoE,MAAO,WACnC,CAAEpE,KAAM,YAAaoE,MAAO,WAC5B,CAAEpE,KAAM,gBAAiBoE,MAAO,WAChC,CAAEpE,KAAM,eAAgBoE,MAAO,WAC/B,CAAEpE,KAAM,aAAcoE,MAAO,WAC7B,CAAEpE,KAAM,eAAgBoE,MAAO,WAC/B,CAAEpE,KAAM,gBAAiBoE,MAAO,WAChC,CAAEpE,KAAM,gBAAiBoE,MAAO,WAChC,CAAEpE,KAAM,WAAYoE,MAAO,WAC3B,CAAEpE,KAAM,kBAAmBoE,MAAO,aAGtC,CACEJ,YAAa,yBACbf,GAAI,yBACJgB,MAAO,2BACPF,OAAQ,CACN,CAAE/D,KAAM,iBAAkBoE,MAAO,WACjC,CAAEpE,KAAM,YAAaoE,MAAO,WAC5B,CAAEpE,KAAM,YAAaoE,MAAO,WAC5B,CAAEpE,KAAM,YAAaoE,MAAO,WAC5B,CAAEpE,KAAM,iBAAkBoE,MAAO,WACjC,CAAEpE,KAAM,aAAcoE,MAAO,WAC7B,CAAEpE,KAAM,UAAWoE,MAAO,WAC1B,CAAEpE,KAAM,WAAYoE,MAAO,WAC3B,CAAEpE,KAAM,YAAaoE,MAAO,WAC5B,CAAEpE,KAAM,oBAAqBoE,MAAO,WACpC,CAAEpE,KAAM,iBAAkBoE,MAAO,WACjC,CAAEpE,KAAM,mBAAoBoE,MAAO,WACnC,CAAEpE,KAAM,iBAAkBoE,MAAO,WACjC,CAAEpE,KAAM,iBAAkBoE,MAAO,WACjC,CAAEpE,KAAM,kBAAmBoE,MAAO,WAClC,CAAEpE,KAAM,YAAaoE,MAAO,WAC5B,CAAEpE,KAAM,cAAeoE,MAAO,WAC9B,CAAEpE,KAAM,gBAAiBoE,MAAO,WAChC,CAAEpE,KAAM,eAAgBoE,MAAO,WAC/B,CAAEpE,KAAM,SAAUoE,MAAO,aAG7B,CACEJ,YAAa,wBACbf,GAAI,wBACJgB,MAAO,2BACPF,OAAQ,CACN,CAAE/D,KAAM,eAAgBoE,MAAO,WAC/B,CAAEpE,KAAM,iBAAkBoE,MAAO,WACjC,CAAEpE,KAAM,YAAaoE,MAAO,WAC5B,CAAEpE,KAAM,cAAeoE,MAAO,WAC9B,CAAEpE,KAAM,cAAeoE,MAAO,WAC9B,CAAEpE,KAAM,eAAgBoE,MAAO,WAC/B,CAAEpE,KAAM,aAAcoE,MAAO,WAC7B,CAAEpE,KAAM,cAAeoE,MAAO,WAC9B,CAAEpE,KAAM,SAAUoE,MAAO,WACzB,CAAEpE,KAAM,eAAgBoE,MAAO,WAC/B,CAAEpE,KAAM,eAAgBoE,MAAO,WAC/B,CAAEpE,KAAM,WAAYoE,MAAO,WAC3B,CAAEpE,KAAM,eAAgBoE,MAAO,WAC/B,CAAEpE,KAAM,cAAeoE,MAAO,WAC9B,CAAEpE,KAAM,YAAaoE,MAAO,WAC5B,CAAEpE,KAAM,gBAAiBoE,MAAO,WAChC,CAAEpE,KAAM,iBAAkBoE,MAAO,WACjC,CAAEpE,KAAM,iBAAkBoE,MAAO,WACjC,CAAEpE,KAAM,YAAaoE,MAAO,WAC5B,CAAEpE,KAAM,sBAAuBoE,MAAO,aAG1C,CACEJ,YAAa,wBACbf,GAAI,wBACJgB,MAAO,2BACPF,OAAQ,CACN,CAAE/D,KAAM,YAAaoE,MAAO,WAC5B,CAAEpE,KAAM,cAAeoE,MAAO,WAC9B,CAAEpE,KAAM,QAASoE,MAAO,WACxB,CAAEpE,KAAM,QAASoE,MAAO,WACxB,CAAEpE,KAAM,gBAAiBoE,MAAO,WAChC,CAAEpE,KAAM,gBAAiBoE,MAAO,WAChC,CAAEpE,KAAM,cAAeoE,MAAO,WAC9B,CAAEpE,KAAM,YAAaoE,MAAO,WAC5B,CAAEpE,KAAM,SAAUoE,MAAO,WACzB,CAAEpE,KAAM,cAAeoE,MAAO,WAC9B,CAAEpE,KAAM,eAAgBoE,MAAO,WAC/B,CAAEpE,KAAM,YAAaoE,MAAO,WAC5B,CAAEpE,KAAM,eAAgBoE,MAAO,WAC/B,CAAEpE,KAAM,gBAAiBoE,MAAO,WAChC,CAAEpE,KAAM,YAAaoE,MAAO,WAC5B,CAAEpE,KAAM,eAAgBoE,MAAO,WAC/B,CAAEpE,KAAM,cAAeoE,MAAO,WAC9B,CAAEpE,KAAM,eAAgBoE,MAAO,WAC/B,CAAEpE,KAAM,cAAeoE,MAAO,WAC9B,CAAEpE,KAAM,gBAAiBoE,MAAO,c,iBC/MhCC,EAAS,CAAE,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAG7D,SAASC,EAAgBC,GAEvB,IAAIC,EAAa,CACfR,YAAaO,EAAeP,YAC5Bf,GAAIsB,EAAetB,GACnBgB,MAAOM,EAAeN,MACtBF,OAAQ,IAN6B,uBAavC,YAAkBM,EAAlB,+CAA0B,CAAC,IAAlBnD,EAAiB,QACxBsD,EAAWT,OAAO7C,GAAS,IAdU,sFAuFlBuD,EAAUC,EAvFQ,uBAsBvC,YAAkBH,EAAeR,OAAjC,+CAAyC,CAAC,IAAjCK,EAAgC,QAKnCO,GA4DeF,EA5DOL,EAAMA,MA4DHM,EA5DU,GAiElCE,IAAOD,MA/BhB,SAAkBF,GAQhB,MAAO,CASLG,IAAOH,GAAUI,OAAO,KAAKC,MAC7BL,EAhBU,QA6BQM,CAASN,IAAWO,KAAK,OAAOjB,OAAOW,IAjEdO,UAQ3C,IAAK,IAAIC,KAAKP,EAGZH,EAAWT,OAAOM,EAAOa,IAAIC,KAAK,CAEhCnF,KAAK,GAAD,OAAKoE,EAAMpE,KAAX,YAAmBqE,EAAOa,IAM9BjC,GAAImB,EAAMpE,KAAKoF,cAAcC,QAAQ,KAAM,KAE3CP,IAAKH,EAAMO,GAEXI,IAAKV,IAAOD,EAAMO,IAAIK,MACtBC,KAAMZ,IAAOD,EAAMO,IAAIK,MAAMF,QAAQ,MAAO,QAAQA,QAAQ,IAAK,YAnDhC,kFAwDvC,OAAOb,E,ICtFYiB,E,iLAGjB,OADA/B,QAAQC,IAAIW,EAAgBoB,EAAW,KAErC,6BAEE,kBAAC,EAAD,CAAS5B,QAASQ,EAAgBoB,EAAW,W,GANpBpF,aCMbqF,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.baa282e0.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport './ColorBox.css';\r\n\r\nexport default class ColorBox extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { copied: false };\r\n\r\n    this.changeCopyState = this.changeCopyState.bind(this);\r\n  }\r\n\r\n  changeCopyState() {\r\n    // change 'copied' state to true for 1.3sec\r\n    // then change it back to false afterwards\r\n    this.setState({ copied: true }, () => {\r\n      setTimeout(() => this.setState({ copied: false }), 1300);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    // extract props for easier access using object destructuring\r\n    const { name, background } = this.props;\r\n    const { copied } = this.state;\r\n    return (\r\n      <CopyToClipboard text={background} onCopy={this.changeCopyState}>\r\n        {/* onCopy a callback function is invoked,  */}\r\n        <div className='ColorBox' style={{ background }}>\r\n          {/* Why do we need another div? ('copy-overlay) */}\r\n          {/* Why dont we just scale up ColorBox? */}\r\n          {/* We want to scale up the whole box, but we need to make a below div for that separately, because we only want to scale up the background and not the whole ColorBox with all of its contents. Since we want to have different content inside, we need another div.*/}\r\n          {/* TLDR: when we use scale to grow a div, it will grow all of the content inside of the div as well */}\r\n\r\n          {/* if this.state.copied is true, add the class \"show\" */}\r\n          <div className={`copy-overlay ${copied && 'show'}`} style={{ background }} />\r\n          <div className={`copy-msg ${copied && 'show'}`}>\r\n            <h1>copied!</h1>\r\n            <p>{background}</p>\r\n          </div>\r\n          <div className='copy-container'>\r\n            <div className='box-content'>\r\n              <span>{name}</span>\r\n            </div>\r\n            <button className='copy-button'>Copy</button>\r\n          </div>\r\n          {/* routes to the individual color page */}\r\n          <span className='see-more'>More</span>\r\n        </div>\r\n      </CopyToClipboard>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Slider from 'rc-slider';\r\nimport 'rc-slider/assets/index.css';\r\nimport './NavBar.css';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nexport default class NavBar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      open: false\r\n    };\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.props.handleColorFormatChange(e.target.value);\r\n    this.handleClick();\r\n  };\r\n\r\n  handleClick = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  handleClose = (event, reason) => {\r\n    this.setState({ open: false });\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { level, onSliderChange, format } = this.props;\r\n\r\n    const style = { width: 300, margin: 20 };\r\n    return (\r\n      <header className='NavBar'>\r\n        <div className='logo'>\r\n          <a href='/'>untitled color game</a>\r\n        </div>\r\n\r\n        <div className='slider-container'>\r\n          <span className='level-marker'>Level: {level}</span>\r\n          <div style={style}>\r\n            <Slider\r\n              defaultValue={level}\r\n              min={100}\r\n              max={900}\r\n              step={100}\r\n              onChange={onSliderChange}\r\n              trackStyle={{ height: 0 }}\r\n              handleStyle={{\r\n                borderColor: '#0f1150',\r\n                height: 17,\r\n                width: 17,\r\n                marginLeft: 0,\r\n                marginTop: -4.5,\r\n                backgroundColor: '#0f1150',\r\n                borderStyle: 'solid',\r\n                borderWidth: 5,\r\n                boxShadow: 'none'\r\n              }}\r\n              railStyle={{ height: 6 }}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className='select-container'>\r\n          <Select value={format} onChange={this.handleChange}>\r\n            <MenuItem value='hex'>HEX - #BADA55</MenuItem>\r\n            <MenuItem value='rgb'>RGB - rgb(186,218,85)</MenuItem>\r\n            <MenuItem value='rgba'>RGBA - rgba(186,218,85,1.0)</MenuItem>\r\n          </Select>\r\n        </div>\r\n\r\n        <div className='snackbar-container'>\r\n          <Snackbar\r\n            anchorOrigin={{\r\n              vertical: 'bottom',\r\n              horizontal: 'left'\r\n            }}\r\n            open={this.state.open}\r\n            autoHideDuration={3000}\r\n            onClose={this.handleClose}\r\n            message={<span id='message-id'>format changed to {format.toUpperCase()}</span>}\r\n            // help screen-readers and a11y to find the content\r\n            ContentProps={{ 'aria-describedby': 'message-id' }}\r\n            action={[\r\n              // to make a button with an icon we need an IconButton :3\r\n              <IconButton onClick={this.handleClose} key='close' aria-label='close'>\r\n                <CloseIcon />\r\n              </IconButton>\r\n            ]}\r\n          />\r\n        </div>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport ColorBox from './ColorBox';\r\nimport NavBar from './NavBar';\r\nimport './Palette.css';\r\n\r\nexport default class Palette extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      level: 600,\r\n      colorFormat: 'hex'\r\n    };\r\n  }\r\n\r\n  onSliderChange = (level) => {\r\n    console.log(level);\r\n    this.setState({ level });\r\n  };\r\n\r\n  handleColorFormatChange = (newFormat) => {\r\n    this.setState({ colorFormat: newFormat });\r\n  };\r\n\r\n  render() {\r\n    const { colors, paletteName, emoji } = this.props.palette;\r\n    const { level, colorFormat } = this.state;\r\n\r\n    const colorBoxes = colors[level].map((color) => <ColorBox background={color[colorFormat]} name={color.name} />);\r\n    return (\r\n      <div className='Palette'>\r\n        <NavBar\r\n          level={level}\r\n          onSliderChange={this.onSliderChange}\r\n          format={colorFormat}\r\n          handleColorFormatChange={this.handleColorFormatChange}\r\n        />\r\n        <div className='Palette-colors'>{colorBoxes}</div>\r\n        <footer className='Palette-footer'>\r\n          {paletteName}\r\n          <span className='emoji'>{emoji}</span>\r\n        </footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export default [\r\n  {\r\n    paletteName: 'Material UI Colors',\r\n    id: 'material-ui-colors',\r\n    emoji: '🎨',\r\n    colors: [\r\n      { name: 'red', color: '#F44336' },\r\n      { name: 'pink', color: '#E91E63' },\r\n      { name: 'purple', color: '#9C27B0' },\r\n      { name: 'deeppurple', color: '#673AB7' },\r\n      { name: 'indigo', color: '#3F51B5' },\r\n      { name: 'blue', color: '#2196F3' },\r\n      { name: 'lightblue', color: '#03A9F4' },\r\n      { name: 'cyan', color: '#00BCD4' },\r\n      { name: 'teal', color: '#009688' },\r\n      { name: 'green', color: '#4CAF50' },\r\n      { name: 'lightgreen', color: '#8BC34A' },\r\n      { name: 'lime', color: '#CDDC39' },\r\n      { name: 'yellow', color: '#FFEB3B' },\r\n      { name: 'amber', color: '#FFC107' },\r\n      { name: 'orange', color: '#FF9800' },\r\n      { name: 'deeporange', color: '#FF5722' },\r\n      { name: 'brown', color: '#795548' },\r\n      { name: 'grey', color: '#9E9E9E' },\r\n      { name: 'bluegrey', color: '#607D8B' }\r\n    ]\r\n  },\r\n  {\r\n    paletteName: 'Flat UI Colors v1',\r\n    id: 'flat-ui-colors-v1',\r\n    emoji: '🤙',\r\n    colors: [\r\n      { name: 'Turquoise', color: '#1abc9c' },\r\n      { name: 'Emerald', color: '#2ecc71' },\r\n      { name: 'PeterRiver', color: '#3498db' },\r\n      { name: 'Amethyst', color: '#9b59b6' },\r\n      { name: 'WetAsphalt', color: '#34495e' },\r\n      { name: 'GreenSea', color: '#16a085' },\r\n      { name: 'Nephritis', color: '#27ae60' },\r\n      { name: 'BelizeHole', color: '#2980b9' },\r\n      { name: 'Wisteria', color: '#8e44ad' },\r\n      { name: 'MidnightBlue', color: '#2c3e50' },\r\n      { name: 'SunFlower', color: '#f1c40f' },\r\n      { name: 'Carrot', color: '#e67e22' },\r\n      { name: 'Alizarin', color: '#e74c3c' },\r\n      { name: 'Clouds', color: '#ecf0f1' },\r\n      { name: 'Concrete', color: '#95a5a6' },\r\n      { name: 'Orange', color: '#f39c12' },\r\n      { name: 'Pumpkin', color: '#d35400' },\r\n      { name: 'Pomegranate', color: '#c0392b' },\r\n      { name: 'Silver', color: '#bdc3c7' },\r\n      { name: 'Asbestos', color: '#7f8c8d' }\r\n    ]\r\n  },\r\n  {\r\n    paletteName: 'Flat UI Colors Dutch',\r\n    id: 'flat-ui-colors-dutch',\r\n    emoji: '🇳🇱',\r\n    colors: [\r\n      { name: 'Sunflower', color: '#FFC312' },\r\n      { name: 'Energos', color: '#C4E538' },\r\n      { name: 'BlueMartina', color: '#12CBC4' },\r\n      { name: 'LavenderRose', color: '#FDA7DF' },\r\n      { name: 'BaraRose', color: '#ED4C67' },\r\n      { name: 'RadiantYellow', color: '#F79F1F' },\r\n      { name: 'AndroidGreen', color: '#A3CB38' },\r\n      { name: 'MediterraneanSea', color: '#1289A7' },\r\n      { name: 'LavenderTea', color: '#D980FA' },\r\n      { name: 'VerryBerry', color: '#B53471' },\r\n      { name: 'PuffinsBill', color: '#EE5A24' },\r\n      { name: 'PixelatedGrass', color: '#009432' },\r\n      { name: 'MerchantMarineBlue', color: '#0652DD' },\r\n      { name: 'ForgottenPurple', color: '#9980FA' },\r\n      { name: 'HollyHock', color: '#833471' },\r\n      { name: 'RedPigment', color: '#EA2027' },\r\n      { name: 'TurkishAqua', color: '#006266' },\r\n      { name: '20000LeaguesUnderTheSea', color: '#1B1464' },\r\n      { name: 'CircumorbitalRing', color: '#5758BB' },\r\n      { name: 'MagentaPurple', color: '#6F1E51' }\r\n    ]\r\n  },\r\n  {\r\n    paletteName: 'Flat UI Colors American',\r\n    id: 'flat-ui-colors-american',\r\n    emoji: '🇺🇸',\r\n    colors: [\r\n      { name: 'LightGreenishBlue', color: '#55efc4' },\r\n      { name: 'FadedPoster', color: '#81ecec' },\r\n      { name: 'GreenDarnerTail', color: '#74b9ff' },\r\n      { name: 'ShyMoment', color: '#a29bfe' },\r\n      { name: 'CityLights', color: '#dfe6e9' },\r\n      { name: 'MintLeaf', color: '#00b894' },\r\n      { name: 'RobinsEggBlue', color: '#00cec9' },\r\n      { name: 'ElectronBlue', color: '#0984e3' },\r\n      { name: 'ExodusFruit', color: '#6c5ce7' },\r\n      { name: 'SoothingBreeze', color: '#b2bec3' },\r\n      { name: 'SourLemon', color: '#ffeaa7' },\r\n      { name: 'FirstDate', color: '#fab1a0' },\r\n      { name: 'PinkGlamour', color: '#ff7675' },\r\n      { name: 'Pico8Pink', color: '#fd79a8' },\r\n      { name: 'AmericanRiver', color: '#636e72' },\r\n      { name: 'BrightYarrow', color: '#fdcb6e' },\r\n      { name: 'OrangeVille', color: '#e17055' },\r\n      { name: 'Chi-Gong', color: '#d63031' },\r\n      { name: 'PrunusAvium', color: '#e84393' },\r\n      { name: 'DraculaOrchid', color: '#2d3436' }\r\n    ]\r\n  },\r\n  {\r\n    paletteName: 'Flat UI Colors Aussie',\r\n    id: 'flat-ui-colors-aussie',\r\n    emoji: '🇦🇺',\r\n    colors: [\r\n      { name: 'Beekeeper', color: '#f6e58d' },\r\n      { name: 'SpicedNectarine', color: '#ffbe76' },\r\n      { name: 'PinkGlamour', color: '#ff7979' },\r\n      { name: 'JuneBud', color: '#badc58' },\r\n      { name: 'CoastalBreeze', color: '#dff9fb' },\r\n      { name: 'Turbo', color: '#f9ca24' },\r\n      { name: 'QuinceJelly', color: '#f0932b' },\r\n      { name: 'CarminePink', color: '#eb4d4b' },\r\n      { name: 'PureApple', color: '#6ab04c' },\r\n      { name: 'HintOfIcePack', color: '#c7ecee' },\r\n      { name: 'MiddleBlue', color: '#7ed6df' },\r\n      { name: 'Heliotrope', color: '#e056fd' },\r\n      { name: 'ExodusFruit', color: '#686de0' },\r\n      { name: 'DeepKoamaru', color: '#30336b' },\r\n      { name: 'SoaringEagle', color: '#95afc0' },\r\n      { name: 'GreenlandGreen', color: '#22a6b3' },\r\n      { name: 'SteelPink', color: '#be2edd' },\r\n      { name: 'Blurple', color: '#4834d4' },\r\n      { name: 'DeepCove', color: '#130f40' },\r\n      { name: 'WizardGrey', color: '#535c68' }\r\n    ]\r\n  },\r\n  {\r\n    paletteName: 'Flat UI Colors British',\r\n    id: 'flat-ui-colors-british',\r\n    emoji: '🇬🇧',\r\n    colors: [\r\n      { name: 'ProtossPylon', color: '#00a8ff' },\r\n      { name: 'Periwinkle', color: '#9c88ff' },\r\n      { name: 'Rise-N-Shine', color: '#fbc531' },\r\n      { name: 'DownloadProgress', color: '#4cd137' },\r\n      { name: 'Seabrook', color: '#487eb0' },\r\n      { name: 'VanaDylBlue', color: '#0097e6' },\r\n      { name: 'MattPurple', color: '#8c7ae6' },\r\n      { name: 'NanohanachaGold', color: '#e1b12c' },\r\n      { name: 'SkirretGreen', color: '#44bd32' },\r\n      { name: 'Naval', color: '#40739e' },\r\n      { name: 'NasturcianFlower', color: '#e84118' },\r\n      { name: 'LynxWhite', color: '#f5f6fa' },\r\n      { name: 'BlueberrySoda', color: '#7f8fa6' },\r\n      { name: 'MazarineBlue', color: '#273c75' },\r\n      { name: 'BlueNights', color: '#353b48' },\r\n      { name: 'HarleyOrange', color: '#c23616' },\r\n      { name: 'HintOfPensive', color: '#dcdde1' },\r\n      { name: 'ChainGangGrey', color: '#718093' },\r\n      { name: 'PicoVoid', color: '#192a56' },\r\n      { name: 'ElectroMagnetic', color: '#2f3640' }\r\n    ]\r\n  },\r\n  {\r\n    paletteName: 'Flat UI Colors Spanish',\r\n    id: 'flat-ui-colors-spanish',\r\n    emoji: '🇪🇸',\r\n    colors: [\r\n      { name: 'JacksonsPurple', color: '#40407a' },\r\n      { name: 'C64Purple', color: '#706fd3' },\r\n      { name: 'SwanWhite', color: '#f7f1e3' },\r\n      { name: 'SummerSky', color: '#34ace0' },\r\n      { name: 'CelestialGreen', color: '#33d9b2' },\r\n      { name: 'LuckyPoint', color: '#2c2c54' },\r\n      { name: 'Liberty', color: '#474787' },\r\n      { name: 'HotStone', color: '#aaa69d' },\r\n      { name: 'DevilBlue', color: '#227093' },\r\n      { name: 'PalmSpringsSplash', color: '#218c74' },\r\n      { name: 'FlourescentRed', color: '#ff5252' },\r\n      { name: 'SyntheticPumpkin', color: '#ff793f' },\r\n      { name: 'CrocodileTooth', color: '#d1ccc0' },\r\n      { name: 'MandarinSorbet', color: '#ffb142' },\r\n      { name: 'SpicedButterNut', color: '#ffda79' },\r\n      { name: 'EyeOfNewt', color: '#b33939' },\r\n      { name: 'ChileanFire', color: '#cd6133' },\r\n      { name: 'GreyPorcelain', color: '#84817a' },\r\n      { name: 'AlamedaOchre', color: '#cc8e35' },\r\n      { name: 'Desert', color: '#ccae62' }\r\n    ]\r\n  },\r\n  {\r\n    paletteName: 'Flat UI Colors Indian',\r\n    id: 'flat-ui-colors-indian',\r\n    emoji: '🇮🇳',\r\n    colors: [\r\n      { name: 'OrchidOrange', color: '#FEA47F' },\r\n      { name: 'SpiroDiscoBall', color: '#25CCF7' },\r\n      { name: 'HoneyGlow', color: '#EAB543' },\r\n      { name: 'SweetGarden', color: '#55E6C1' },\r\n      { name: 'FallingStar', color: '#CAD3C8' },\r\n      { name: 'RichGardenia', color: '#F97F51' },\r\n      { name: 'ClearChill', color: '#1B9CFC' },\r\n      { name: 'WhitePepper', color: '#F8EFBA' },\r\n      { name: 'Keppel', color: '#58B19F' },\r\n      { name: 'ShipsOfficer', color: '#2C3A47' },\r\n      { name: 'FieryFuchsia', color: '#B33771' },\r\n      { name: 'BlueBell', color: '#3B3B98' },\r\n      { name: 'GeorgiaPeach', color: '#FD7272' },\r\n      { name: 'OasisStream', color: '#9AECDB' },\r\n      { name: 'BrightUbe', color: '#D6A2E8' },\r\n      { name: 'MagentaPurple', color: '#6D214F' },\r\n      { name: 'EndingNavyBlue', color: '#182C61' },\r\n      { name: 'SasquatchSocks', color: '#FC427B' },\r\n      { name: 'PineGlade', color: '#BDC581' },\r\n      { name: 'HighlighterLavender', color: '#82589F' }\r\n    ]\r\n  },\r\n  {\r\n    paletteName: 'Flat UI Colors French',\r\n    id: 'flat-ui-colors-french',\r\n    emoji: '🇫🇷',\r\n    colors: [\r\n      { name: 'FlatFlesh', color: '#fad390' },\r\n      { name: 'MelonMelody', color: '#f8c291' },\r\n      { name: 'Livid', color: '#6a89cc' },\r\n      { name: 'Spray', color: '#82ccdd' },\r\n      { name: 'ParadiseGreen', color: '#b8e994' },\r\n      { name: 'SquashBlossom', color: '#f6b93b' },\r\n      { name: 'MandarinRed', color: '#e55039' },\r\n      { name: 'AzraqBlue', color: '#4a69bd' },\r\n      { name: 'Dupain', color: '#60a3bc' },\r\n      { name: 'AuroraGreen', color: '#78e08f' },\r\n      { name: 'IcelandPoppy', color: '#fa983a' },\r\n      { name: 'TomatoRed', color: '#eb2f06' },\r\n      { name: 'YueGuangBlue', color: '#1e3799' },\r\n      { name: 'GoodSamaritan', color: '#3c6382' },\r\n      { name: 'Waterfall', color: '#38ada9' },\r\n      { name: 'CarrotOrange', color: '#e58e26' },\r\n      { name: 'JalapenoRed', color: '#b71540' },\r\n      { name: 'DarkSapphire', color: '#0c2461' },\r\n      { name: 'ForestBlues', color: '#0a3d62' },\r\n      { name: 'ReefEncounter', color: '#079992' }\r\n    ]\r\n  }\r\n];\r\n","// A reminder of how a starter palette object is structured\r\n\r\n// {\r\n//   paletteName: 'Flat UI Colors Dutch',\r\n//   id: 'flat-ui-colors-dutch',\r\n//   emoji: '🇳🇱',\r\n//   colors: [\r\n//     { name: 'Sunflower', color: '#FFC312' },\r\n//     { name: 'Energos', color: '#C4E538' },\r\n//     { name: 'BlueMartina', color: '#12CBC4' },\r\n//     { name: 'LavenderRose', color: '#FDA7DF' },\r\n//     { name: 'BaraRose', color: '#ED4C67' },\r\n//     { name: 'RadiantYellow', color: '#F79F1F' },\r\n//     { name: 'AndroidGreen', color: '#A3CB38' },\r\n//     { name: 'MediterraneanSea', color: '#1289A7' },\r\n//     { name: 'LavenderTea', color: '#D980FA' },\r\n//     { name: 'VerryBerry', color: '#B53471' },\r\n//     { name: 'PuffinsBill', color: '#EE5A24' },\r\n//     { name: 'PixelatedGrass', color: '#009432' },\r\n//     { name: 'MerchantMarineBlue', color: '#0652DD' },\r\n//     { name: 'ForgottenPurple', color: '#9980FA' },\r\n//     { name: 'HollyHock', color: '#833471' },\r\n//     { name: 'RedPigment', color: '#EA2027' },\r\n//     { name: 'TurkishAqua', color: '#006266' },\r\n//     { name: '20000LeaguesUnderTheSea', color: '#1B1464' },\r\n//     { name: 'CircumorbitalRing', color: '#5758BB' },\r\n//     { name: 'MagentaPurple', color: '#6F1E51' }\r\n//   ]\r\n// }\r\n\r\nimport chroma from 'chroma-js';\r\n\r\n// define an array for the different levels\r\nconst levels = [ 50, 100, 200, 300, 400, 500, 600, 700, 800, 900 ];\r\n\r\n// define a function that takes in a palette object and generates the different varieties of shades based on that palette's colors\r\nfunction generatePalette(starterPalette) {\r\n  // make new Palette\r\n  let newPalette = {\r\n    paletteName: starterPalette.paletteName,\r\n    id: starterPalette.id,\r\n    emoji: starterPalette.emoji,\r\n    colors: {\r\n      // instead of hardcoding it, make it dynamic\r\n    }\r\n  };\r\n\r\n  // build a new colors object that will contain each level\r\n  // and set them all to an empty array\r\n  for (let level of levels) {\r\n    newPalette.colors[level] = [];\r\n  }\r\n\r\n  // fill in empty arrays by looping over every color (starterPalette.colors)\r\n  // generate a scale with all those different colors\r\n  // take the lightest color and add it as the '50' value\r\n  // make sure to generate rgb and rgba as well\r\n  // return new Palette\r\n  for (let color of starterPalette.colors) {\r\n    // \"color\" represents one color object from the palette\r\n    // \"color.color\" is the actual color value\r\n    // 10 is the numberOfColor we wish to generate\r\n    // reverse it so the scale starts from white and gradually darkens from there\r\n    let scale = generateScale(color.color, 10).reverse();\r\n\r\n    // newPalette.colors object has all the levels set to an empty array\r\n    // like -> colors: { 50: [], 100: [], ...}\r\n    // there are 10 levels, and a scale of 10 colors has just been generated\r\n\r\n    // loop through each newly generated color in scale and\r\n    // push them to the corresponding level.\r\n    for (let i in scale) {\r\n      // push as an object\r\n      // levels[i] is the current level we are on, like 50, 100, ...\r\n      newPalette.colors[levels[i]].push({\r\n        // name: \"Sunflower 500\"\r\n        name: `${color.name} ${levels[i]}`,\r\n        // since some of the color names have spaces in them, and\r\n        // its most likely that we want to use the id for routing,\r\n        // replace spaces with dashes instead using regEx\r\n        // replace a space globally / /g\r\n        // with a dash \"-\"\r\n        id: color.name.toLowerCase().replace(/ /g, '-'),\r\n        // set the hex value as the value that already came back to the scale array\r\n        hex: scale[i],\r\n        // set the rgb value, first turn it to a chroma color then call .css() on it.\r\n        rgb: chroma(scale[i]).css(),\r\n        rgba: chroma(scale[i]).css().replace('rgb', 'rgba').replace(')', ',1.0)')\r\n      });\r\n    }\r\n  }\r\n\r\n  return newPalette;\r\n}\r\n\r\n// create a range of colors (dark -> main color -> white)\r\n// takes in a main hexColor\r\nfunction getRange(hexColor) {\r\n  // define the end color and set it to white\r\n  const end = '#fff';\r\n\r\n  // return an array that will include 3 colors:\r\n  // a dark shade (generated),\r\n  // the input hexColor (= our color)\r\n  // and the end color (white)\r\n  return [\r\n    // The first color in the range will be the darkest.\r\n    // Using black would produce too many dark colors when using it inside the\r\n    // generateScale function, so instead we take the main color and darken it by 1.4.\r\n    // That way the start of range color will be dark enough\r\n    // but wont compromise half of the palette with too many dark shades.\r\n\r\n    // Wrap hexColor into chroma() contructor to turn it into a chroma color\r\n    // then darken it by 1.4 and get a hex value out of it\r\n    chroma(hexColor).darken(1.4).hex(),\r\n    hexColor,\r\n    end\r\n  ];\r\n}\r\n\r\n// generate a defined number of color variants based on the input color\r\n// takes in a main hexColor\r\n// and the number of colors to generate\r\nfunction generateScale(hexColor, numberOfColors) {\r\n  // chroma.scale takes in the range of colors that got generated by getRange()\r\n  // then set .mode() to \"lab\", as \"lab\" mode produces less greyish\r\n  // then call .colors() in it and pass the numberOfColors\r\n  // .colors(n) produces n equally distant colors from a scale.\r\n  return chroma.scale(getRange(hexColor)).mode('lab').colors(numberOfColors);\r\n}\r\n\r\n// export it, import it, call it\r\nexport { generatePalette };\r\n\r\n// console.log(generatePalette(seedColors[2])) shows how the generated Palette looks like:\r\n\r\n// {paletteName: \"Flat UI Colors Dutch\", id: \"flat-ui-colors-dutch\", emoji: \"🇳🇱\", colors: {…}}\r\n// colors:\r\n// 50: (20) [{…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}]\r\n// ...\r\n// ...\r\n// 800: Array(20)\r\n// 0: {name: \"Sunflower 800\", id: \"sunflower\", hex: \"#c28f03\", rgb: \"rgb(194,143,3)\", rgba: \"rgb(194,143,3,1.0)\"}\r\n// 1: {name: \"Energos 800\", id: \"energos\", hex: \"#8baf10\", rgb: \"rgb(139,175,16)\", rgba: \"rgb(139,175,16,1.0)\"}\r\n// 2: {name: \"BlueMartina 800\", id: \"bluemartina\", hex: \"#03958f\", rgb: \"rgb(3,149,143)\", rgba: \"rgb(3,149,143,1.0)\"}\r\n// 3: {name: \"LavenderRose 800\", id: \"lavenderrose\", hex: \"#c473a9\", rgb: \"rgb(196,115,169)\", rgba: \"rgb(196,115,169,1.0)\"}\r\n// 4: {name: \"BaraRose 800\", id: \"bararose\", hex: \"#b01839\", rgb: \"rgb(176,24,57)\", rgba: \"rgb(176,24,57,1.0)\"}\r\n// 5: {name: \"RadiantYellow 800\", id: \"radiantyellow\", hex: \"#ba6d06\", rgb: \"rgb(186,109,6)\", rgba: \"rgb(186,109,6,1.0)\"}\r\n// 6: {name: \"AndroidGreen 800\", id: \"androidgreen\", hex: \"#6c9610\", rgb: \"rgb(108,150,16)\", rgba: \"rgb(108,150,16,1.0)\"}\r\n// 7: {name: \"MediterraneanSea 800\", id: \"mediterraneansea\", hex: \"#035874\", rgb: \"rgb(3,88,116)\", rgba: \"rgb(3,88,116,1.0)\"}\r\n// 8: {name: \"LavenderTea 800\", id: \"lavendertea\", hex: \"#a14cc2\", rgb: \"rgb(161,76,194)\", rgba: \"rgb(161,76,194,1.0)\"}\r\n// 9: {name: \"VerryBerry 800\", id: \"verryberry\", hex: \"#7d0d42\", rgb: \"rgb(125,13,66)\", rgba: \"rgb(125,13,66,1.0)\"}\r\n// 10: {name: \"PuffinsBill 800\", id: \"puffinsbill\", hex: \"#af2007\", rgb: \"rgb(175,32,7)\", rgba: \"rgb(175,32,7,1.0)\"}\r\n// 11: {name: \"PixelatedGrass 800\", id: \"pixelatedgrass\", hex: \"#01600b\", rgb: \"rgb(1,96,11)\", rgba: \"rgb(1,96,11,1.0)\"}\r\n// 12: {name: \"MerchantMarineBlue 800\", id: \"merchantmarineblue\", hex: \"#0329a5\", rgb: \"rgb(3,41,165)\", rgba: \"rgb(3,41,165,1.0)\"}\r\n// 13: {name: \"ForgottenPurple 800\", id: \"forgottenpurple\", hex: \"#614fc2\", rgb: \"rgb(97,79,194)\", rgba: \"rgb(97,79,194,1.0)\"}\r\n// 14: {name: \"HollyHock 800\", id: \"hollyhock\", hex: \"#500b42\", rgb: \"rgb(80,11,66)\", rgba: \"rgb(80,11,66,1.0)\"}\r\n// 15: {name: \"RedPigment 800\", id: \"redpigment\", hex: \"#aa0609\", rgb: \"rgb(170,6,9)\", rgba: \"rgb(170,6,9,1.0)\"}\r\n// 16: {name: \"TurkishAqua 800\", id: \"turkishaqua\", hex: \"#003338\", rgb: \"rgb(0,51,56)\", rgba: \"rgb(0,51,56,1.0)\"}\r\n// 17: {name: \"20000LeaguesUnderTheSea 800\", id: \"20000leaguesunderthesea\", hex: \"#040837\", rgb: \"rgb(4,8,55)\", rgba: \"rgb(4,8,55,1.0)\"}\r\n// 18: {name: \"CircumorbitalRing 800\", id: \"circumorbitalring\", hex: \"#1d2c86\", rgb: \"rgb(29,44,134)\", rgba: \"rgb(29,44,134,1.0)\"}\r\n// 19: {name: \"MagentaPurple 800\", id: \"magentapurple\", hex: \"#3e0525\", rgb: \"rgb(62,5,37)\", rgba: \"rgb(62,5,37,1.0)\"}\r\n// length: 20\r\n// __proto__: Array(0)\r\n// ...\r\n// ...\r\n// 900: (20) [{…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}]\r\n// emoji: \"🇳🇱\"\r\n// id: \"flat-ui-colors-dutch\"\r\n// paletteName: \"Flat UI Colors Dutch\"\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Palette from './Palette';\nimport seedColors from './seedColors';\nimport { generatePalette } from './colorHelpers';\n\nexport default class App extends Component {\n  render() {\n    console.log(generatePalette(seedColors[2]));\n    return (\n      <div>\n        {/* passing the newly generated palette down to the Palette Component as a prop */}\n        <Palette palette={generatePalette(seedColors[2])} />\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}